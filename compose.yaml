services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: GeoProfiles/Dockerfile
    ports:
      - "8080:8080"
      - "8082:8082"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      API__Swagger__Enabled: 'true'
      API__Auth__BasicAuthUsers__admin__Password: admin
      API__Auth__BasicAuthUsers__test__Password: test
      ConnectionStrings__DefaultConnection: Host=postgres-db;Database=db;Username=db_usr;Password=db_pass
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthz" ]
      interval: 10s
      timeout: 3s
      retries: 12
    profiles: [ "app" ]

  postgres-db:
    image: postgis/postgis:15-3.3
    container_name: postgres-db
    environment:
      POSTGRES_USER: db_usr
      POSTGRES_PASSWORD: db_pass
      POSTGRES_DB: db
    ports:
      - "5430:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db_usr" ]
      interval: 5s
      retries: 10

  migration:
    image: flyway/flyway:9.21
    container_name: flyway_migration
    depends_on:
      postgres-db:
        condition: service_healthy
    entrypoint: [
      "sh", "-c",
      "flyway \   
        -baselineOnMigrate=true \
        -baselineVersion=0 \    
        -url=jdbc:postgresql://postgres-db:5432/db \
        -user=db_usr \
        -password=db_pass \
        -encoding=UTF-8 \
        migrate"
    ]
    volumes:
      - ./GeoProfiles/Migrations:/flyway/sql

volumes:
  db-data:
